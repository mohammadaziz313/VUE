Directives:
a) v-bind: Binds HTML elements to the Vue Instance.
b) v-once: renders the contents once only.
c) v-html: It tells VueJS to render the text provided as a html tag instead of text

Event Modifiers:
a) v-on:mousemove.stop : This will stop the propagation of the events.

Two-way data binding:
v-model: We use this directive for two way data binding.

Using Computed properties:
Computed properties are important since it doesn't re-render the contents if the property dependent on
on the function doesn't change. We should always use this instead of methods.

Using watch property:
We use this in case of asynchronous tasks. These are always applied on data properties. It is a good practice
to always use Computed properties.

v-on -> @
v-bind -> :

We can dynamically style using :class property.

v-bind:class requires an object. We bind the class to an object. However, this is not always the ideal case.
In most cases, we provide it with a function that returns an object.

v-if / v-else-if / v-else -> These directive work as if and else. They completely remove or add elements from the DOM.

<template></template> -> This html tag allows us to group similar tags together.

v-show : This allows us to keep the element in the DOM while hiding it from the DOM.

ref: Allows us to access any element in the DOM.
--------------------------------
Example: 
<p ref="paragraph"></p>

Access it: vm.$refs.paragraph.innerText = 'Hey'
--------------------------------

In case we do not know where and when to mount our vue instance. We may use the following method:
-----------------------------------------------------------------
var app1 = new Vue({
    data:{}
});

app1.$mount('#app1'); // We place the id which we want to hook up. 
-----------------------------------------------------------------

We can also declare an empty div for example and populate it using VueJS.
-----------------------------------------------------------------
<div id="app3"></div>

var app3 = new Vue({
    template : '<h1>hey</h1>'
});

1)  app3.$mount('#app3');

2)  app3.$mount();
    document.getElementById("app3").appendChild(app3.$el);
-----------------------------------------------------------------

Components are way to reuse a particular template.
